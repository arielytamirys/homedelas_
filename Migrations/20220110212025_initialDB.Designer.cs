// <auto-generated />
using System;
using Homedelas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace homedelas.Migrations
{
    [DbContext(typeof(InicialContext))]
    [Migration("20220110212025_initialDB")]
    partial class initialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Homedelas.Models.Cadastro_Vaga", b =>
                {
                    b.Property<int>("Id_Cadastro_Vaga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContatoId_Contato")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoginId_Login")
                        .HasColumnType("int");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vaga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Cadastro_Vaga");

                    b.HasIndex("ContatoId_Contato");

                    b.HasIndex("LoginId_Login");

                    b.ToTable("Cadastro_Vagas");
                });

            modelBuilder.Entity("Homedelas.Models.Contato", b =>
                {
                    b.Property<int>("Id_Contato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Contato");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("Homedelas.Models.Inicial", b =>
                {
                    b.Property<int>("Id_Inicial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Buscar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VagasId_Vagas")
                        .HasColumnType("int");

                    b.HasKey("Id_Inicial");

                    b.HasIndex("VagasId_Vagas");

                    b.ToTable("Inicials");
                });

            modelBuilder.Entity("Homedelas.Models.Login", b =>
                {
                    b.Property<int>("Id_Login")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Confirmar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Login");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Homedelas.Models.Vaga", b =>
                {
                    b.Property<int>("Id_Vagas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cadastro_VagaId_Cadastro_Vaga")
                        .HasColumnType("int");

                    b.HasKey("Id_Vagas");

                    b.HasIndex("Cadastro_VagaId_Cadastro_Vaga");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("Homedelas.Models.Cadastro_Vaga", b =>
                {
                    b.HasOne("Homedelas.Models.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId_Contato");

                    b.HasOne("Homedelas.Models.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginId_Login");

                    b.Navigation("Contato");

                    b.Navigation("Login");
                });

            modelBuilder.Entity("Homedelas.Models.Inicial", b =>
                {
                    b.HasOne("Homedelas.Models.Vaga", "Vagas")
                        .WithMany()
                        .HasForeignKey("VagasId_Vagas");

                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("Homedelas.Models.Vaga", b =>
                {
                    b.HasOne("Homedelas.Models.Cadastro_Vaga", "Cadastro_Vaga")
                        .WithMany()
                        .HasForeignKey("Cadastro_VagaId_Cadastro_Vaga");

                    b.Navigation("Cadastro_Vaga");
                });
#pragma warning restore 612, 618
        }
    }
}
